<Window x:Class="FileHashChecker.Views.MainWindow"
		xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
		xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
		xmlns:viewModels="clr-namespace:FileHashChecker.ViewModels"
		xmlns:converters="clr-namespace:FileHashChecker.Views.Converters"
		Title="File Hash Checker"
		Width="320" MaxWidth="320"
		Height="400" SizeToContent="Height"
		WindowStyle="None">
	<WindowChrome.WindowChrome>
		<WindowChrome CaptionHeight="0"
					  GlassFrameThickness="-1"
					  CornerRadius="0"
					  ResizeBorderThickness="0"/>
	</WindowChrome.WindowChrome>

	<Window.Resources>
		<ResourceDictionary>
			<ResourceDictionary.MergedDictionaries>
				<ResourceDictionary Source="Chrome.xaml"/>
				<ResourceDictionary>
					<BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverterKey"/>
					<converters:BooleanInverseConverter x:Key="BooleanInverseConverterKey"/>
					<converters:BooleanToProgressStateConverter x:Key="BooleanToProgressStateConverterKey"/>

					<SolidColorBrush x:Key="Window.Border" Color="#AA6a6a6a"/>
					<SolidColorBrush x:Key="Input.Background" Color="#FFf3f3f3"/>
					<SolidColorBrush x:Key="Output.Background" Color="White"/>
					<SolidColorBrush x:Key="Menu.Background" Color="#FFe1e1e1"/>
					<SolidColorBrush x:Key="Match.Background" Color="DeepSkyBlue"/>
					<SolidColorBrush x:Key="Progress.Foreground" Color="LightSkyBlue"/>
					<SolidColorBrush x:Key="Progress.Background" Color="#FFe2e2e2"/>					
				</ResourceDictionary>
			</ResourceDictionary.MergedDictionaries>
		</ResourceDictionary>
	</Window.Resources>

	<Window.DataContext>
		<viewModels:MainWindowViewModel/>
	</Window.DataContext>

	<Window.TaskbarItemInfo>
		<TaskbarItemInfo ProgressState="{Binding IsReading, Converter={StaticResource BooleanToProgressStateConverterKey}}"
						 ProgressValue="{Binding ProgressRate}"/>
	</Window.TaskbarItemInfo>

	<Border BorderThickness="1"
			BorderBrush="{StaticResource Window.Border}"
			UseLayoutRounding="True">
		<Grid>
			<Grid.RowDefinitions>
				<RowDefinition Height="Auto"/>
				<RowDefinition Height="Auto"/>
			</Grid.RowDefinitions>

			<!-- Title bar -->
			<Grid Grid.Row="0"
				  x:Name="TitleBar"
				  Background="{StaticResource Input.Background}">
				<Grid.ColumnDefinitions>
					<ColumnDefinition Width="Auto"/>
					<ColumnDefinition/>
					<ColumnDefinition Width="Auto"/>
					<ColumnDefinition Width="Auto"/>
					<ColumnDefinition Width="Auto"/>
				</Grid.ColumnDefinitions>

				<TextBlock Grid.Column="1"
						   Margin="8,0" HorizontalAlignment="Left" VerticalAlignment="Center"
						   Text="{Binding Title, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Window}}}"/>

				<Button Grid.Column="2"
						Style="{StaticResource CaptionButton.MenuStyle}"
						Click="Menu_Click"/>
				<Button Grid.Column="3"
						Style="{StaticResource CaptionButton.MinimizeStyle}"
						Click="Minimize_Click"/>
				<Button Grid.Column="4"
						Style="{StaticResource CaptionButton.CloseStyle}"
						Click="Close_Click"/>
			</Grid>

			<StackPanel Grid.Row="1"
						x:Name="MainPain">
				<ListBox BorderThickness="0"
						 Background="{StaticResource Input.Background}"
						 HorizontalContentAlignment="Stretch"
						 ScrollViewer.HorizontalScrollBarVisibility="Disabled">
					<ListBoxItem>
						<StackPanel x:Name="FilePathBox"
									Margin="6,0"
									IsEnabled="{Binding IsReading, Mode=OneWay, Converter={StaticResource BooleanInverseConverterKey}}">
							<!-- File Path -->
							<Label Content="File Path"/>
							<TextBox MinHeight="24" Margin="4,0"
									 VerticalContentAlignment="Center"
									 IsReadOnly="True"
									 Text="{Binding SourceFilePath, Mode=OneWay}"/>
							<Button Margin="4,-1,4,0" HorizontalAlignment="Right"
									Padding="6,0"
									TextElement.FontSize="11.5"
									Content="Browse"
									Click="Browse_Click"/>
						</StackPanel>
					</ListBoxItem>
					<ListBoxItem>
						<StackPanel x:Name="ExpectedValueBox"
									Margin="6,0,6,8">
							<!-- Expected Value -->
							<Label Content="Expected Value"/>
							<TextBox MinHeight="24" Margin="4,0"
									 VerticalContentAlignment="Center"
									 FontFamily="Consolas" FontSize="13" TextWrapping="Wrap"
									 Text="{Binding ExpectedValue, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, Delay=200}"/>
							<Button Margin="4,-1,4,0" HorizontalAlignment="Right"
									Padding="6,0"
									TextElement.FontSize="11.5"
									Content="Read Clipboard"
									Click="Clipboard_Click"/>
						</StackPanel>
					</ListBoxItem>
					<ListBox.ItemContainerStyle>
						<Style TargetType="{x:Type ListBoxItem}">
							<Setter Property="OverridesDefaultStyle" Value="True"/>
							<Setter Property="Margin" Value="0"/>
							<Setter Property="Template">
								<Setter.Value>
									<ControlTemplate TargetType="{x:Type ListBoxItem}">
										<ContentPresenter/>
									</ControlTemplate>
								</Setter.Value>
							</Setter>
						</Style>
					</ListBox.ItemContainerStyle>
				</ListBox>

				<!-- Hash -->
				<ListBox Margin="0,6"
						 BorderThickness="0"
						 Background="{StaticResource Output.Background}"
						 HorizontalContentAlignment="Stretch"
						 ScrollViewer.HorizontalScrollBarVisibility="Disabled"
						 ItemsSource="{Binding Hashes}">
					<ListBox.ItemTemplate>
						<DataTemplate>
							<StackPanel>
								<StackPanel Margin="9,0,0,0"
											Orientation="Horizontal">
									<CheckBox VerticalAlignment="Center"
											  IsEnabled="{Binding IsReading, Mode=OneWay, Converter={StaticResource BooleanInverseConverterKey}}"
											  IsChecked="{Binding IsEnabled, Mode=TwoWay}"/>
									<Label VerticalAlignment="Center"
										   Content="{Binding Name, Mode=OneTime}"/>
									<Grid Background="{StaticResource Match.Background}"
										  Visibility="{Binding HasMatch, Mode=OneWay, Converter={StaticResource BooleanToVisibilityConverterKey}}">
										<Label VerticalAlignment="Center"
											   Foreground="White" FontWeight="Bold"
											   Content="Match!"/>
									</Grid>
								</StackPanel>

								<ProgressBar Height="3" Margin="10,-3,10,0"
											 BorderThickness="0"
											 Background="{StaticResource Progress.Background}"
											 Foreground="{StaticResource Progress.Foreground}"
											 Visibility="{Binding IsReading, Mode=OneWay, Converter={StaticResource BooleanToVisibilityConverterKey}}"
											 Maximum="1"
											 Value="{Binding ProgressRate, Mode=OneWay}"/>

								<TextBox MinHeight="24" Margin="10,0,10,8"
										 VerticalContentAlignment="Center"
										 IsReadOnly="True" FontFamily="Consolas" FontSize="13" TextWrapping="Wrap"
										 Text="{Binding HashValue, Mode=OneWay}"
										 Visibility="{Binding IsEnabled, Mode=OneWay, Converter={StaticResource BooleanToVisibilityConverterKey}}"/>
							</StackPanel>
						</DataTemplate>
					</ListBox.ItemTemplate>
					<ListBox.ItemContainerStyle>
						<Style TargetType="{x:Type ListBoxItem}">
							<Setter Property="OverridesDefaultStyle" Value="True"/>
							<Setter Property="Margin" Value="0"/>
							<Setter Property="Template">
								<Setter.Value>
									<ControlTemplate TargetType="{x:Type ListBoxItem}">
										<ContentPresenter/>
									</ControlTemplate>
								</Setter.Value>
							</Setter>
						</Style>
					</ListBox.ItemContainerStyle>
				</ListBox>

				<Grid Margin="10,0,10,10">
					<Grid.ColumnDefinitions>
						<ColumnDefinition Width="3*"/>
						<ColumnDefinition Width="1*"/>
					</Grid.ColumnDefinitions>

					<!-- Compute -->
					<Button Grid.Column="0"
							Padding="6"
							Content="Compute Hash Value"
							IsEnabled="{Binding CanCompute, Mode=OneWay}"
							Click="Compute_Click"/>

					<!-- Stop -->
					<Button Grid.Column="1"
							Padding="6"
							Content="Stop"
							IsEnabled="{Binding IsReading, Mode=OneWay}"
							Click="Stop_Click">
						<Button.Style>
							<Style TargetType="{x:Type Button}">
								<Setter Property="Margin" Value="0"/>
								<Setter Property="BorderThickness" Value="0,1,1,1"/>
								<Style.Triggers>
									<Trigger Property="IsEnabled" Value="True">
										<Setter Property="Margin" Value="-1,0,0,0"/>
										<Setter Property="BorderThickness" Value="1"/>
									</Trigger>
								</Style.Triggers>
							</Style>
						</Button.Style>
					</Button>
				</Grid>
			</StackPanel>

			<!-- Menu -->
			<Grid Grid.Row="1"
				  x:Name="MenuPain"
				  Width="180" HorizontalAlignment="Right"
				  Background="{StaticResource Menu.Background}"
				  Visibility="{Binding IsMenuOpen, RelativeSource={RelativeSource Mode=FindAncestor,AncestorType={x:Type Window}}, Mode=OneWay, FallbackValue=Collapsed, Converter={StaticResource BooleanToVisibilityConverterKey}}">
				<StackPanel Margin="8">
					<CheckBox Margin="4"
							  IsChecked="{Binding IsSendToEnabled, Mode=TwoWay}">
						<TextBlock TextWrapping="Wrap"
								   Text="Enable to send file from explorer's context menu"/>
					</CheckBox>
				</StackPanel>
			</Grid>
		</Grid>
	</Border>
</Window>